parameters:
  jobProperties: {}
  stepProperties: {
    installTools: {},
    packSolution: {},
    publishArtifact: {}
  }
  toolset: 'powerapps-build-tools'
  toolsDirectory: '$(Pipeline.Workspace)\tools'

jobs:
- job:
  ${{ if eq(parameters.jobProperties.name, null) }}:
    name: 'Build'
  
  ${{ if eq(parameters.jobProperties.pool, null) }}:
    pool:
      vmImage: 'windows-latest'
  
  ${{ insert }}: ${{ parameters.jobProperties }}

  steps:
  - template: ../steps/install-tools.yml
    parameters:
      ${{ parameters }}
      toolset: ${{ parameters.toolset }}
      toolsDirectory: '$(Pipeline.Workspace)\tools'
  - ${{ if eq(parameters.toolset, 'powerapps-build-tools') }}:
    - template: ../steps/powerapps-build-tools/install-tools.yml
      parameters:
        stepProperties: ${{ parameters.jobProperties.installTools }}

    - task: PowerAppsPackSolution@0
      inputs:
        SolutionSourceFolder: '$(Build.SourcesDirectory)\${{ parameters.solutionPath }}'
        SolutionOutputFile: '$(Pipeline.Workspace)\packed-solutions\${{ parameters.solutionName }}.zip'
        SolutionType: Both

  - ${{ if eq(parameters.toolset, 'powershell') }}:
    - task: PowerShell@2
      name: 'Install-Tools'
      inputs:
        targetType: 'filePath'
        filePath: '../powershell/install-tools.ps1'
        arguments:
          toolsDirectory: ${{ parameters.toolsDirectory }}
        ${{ insert }}: ${{ parameters.}}

    - template: ../steps/powershell/pack-solution.yml
  - powershell: |
      Start-Process tools/CoreTools/SolutionPackager.exe `
      -ArgumentList `
        "/action: Pack", `
        "/zipfile: $(build.artifactStagingDirectory)\packedSolution\$(solution.name).zip", `
        "/folder: $(solution.path)", `
        "/packagetype: Both" `
      -Wait `
      -NoNewWindow
    displayName: 'Solution Packager: pack solution'
  
  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: $(Build.ArtifactStagingDirectory)
      artifactName: drop
    displayName: 'Publish build artifacts'